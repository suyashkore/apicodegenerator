<?php

use {{namespace}}\Controllers\{{modelName}}Controller;
use Illuminate\Support\Facades\Route;

/**
 * Define routes for the {{modelName}} model.
 *
 * This file contains routes for CRUD operations and other functionalities related to the {{modelName}} model.
 * Each route is protected by the 'jwt.auth' and 'setUserContext' middleware to ensure the user is authenticated
 * and the user context is properly set.
 */
//TODO: Check if below line should start with Route::prefix('modelname_lowercase_in_plural')->middleware(['jwt.auth', 'setUserContext'])->group(function () {
Route::middleware(['jwt.auth', 'setUserContext'])->group(function () {

    // Route to create a new {{modelName}}: C
    Route::post('/', [{{modelName}}Controller::class, 'store'])->middleware('checkPrivileges:TENANT_ALL');

    // Route to fetch a single {{modelName}} by its ID: R
    Route::get('/id/{id}', [{{modelName}}Controller::class, 'show'])->middleware('checkPrivileges:TENANT_ALL');

    // Route to fetch a list of {{modelNamePlural}} with optional filters, sorting, and pagination: R
    Route::get('/', [{{modelName}}Controller::class, 'index'])->middleware('checkPrivileges:TENANT_ALL');

    // Route to update an existing {{modelName}}: U
    Route::put('/{id}', [{{modelName}}Controller::class, 'update'])->middleware('checkPrivileges:TENANT_ALL');

    //TODO: Check if this route is required for {{modelName}}
    // Route to upload an image for a {{modelName}}: U
    Route::post('/{id}/uploadimage', [{{modelName}}Controller::class, 'uploadImage'])->middleware('checkPrivileges:TENANT_ALL');

    //TODO: Check if this route is required for {{modelName}}
    // Route to deactivate a {{modelName}} (soft delete): U
    Route::patch('/{id}/deactivate', [{{modelName}}Controller::class, 'deactivate'])->middleware('checkPrivileges:TENANT_ALL');

    // Route to delete a {{modelName}} permanently: D
    Route::delete('/{id}', [{{modelName}}Controller::class, 'destroy'])->middleware('checkPrivileges:TENANT_ALL');

    // Route to download an XLSX template for importing {{modelNamePlural}}
    Route::get('/xlsxtemplate', [{{modelName}}Controller::class, 'xlsxTemplate'])->middleware('checkPrivileges:TENANT_ALL');

    // Route to import {{modelNamePlural}} from an XLSX file
    Route::post('/import/xlsx', [{{modelName}}Controller::class, 'importXlsx'])->middleware('checkPrivileges:TENANT_ALL');

    // Route to export {{modelNamePlural}} to an XLSX file
    Route::get('/export/xlsx', [{{modelName}}Controller::class, 'exportXlsx'])->middleware('checkPrivileges:TENANT_ALL');

});
